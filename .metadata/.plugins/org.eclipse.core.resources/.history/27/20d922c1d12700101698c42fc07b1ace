package demo;

import java.util.Comparator;
import java.util.HashSet;
import java.util.Set;
import java.util.stream.IntStream;

public class LongestSubString {
	public static void main(String[] args) {
        String s = "abcabcbb";

        String longestSubstring = IntStream.range(0, s.length())
            .mapToObj(start -> findUniqueSubstring(s, start))
            .max(Comparator.comparingInt(String::length))
            .orElse("");

        System.out.println("Longest Substring: " + longestSubstring);
    }

    private static String findUniqueSubstring(String s, int start) {
        Set<Character> seen = new HashSet<>();
        StringBuilder substring = new StringBuilder();
        for (int i = start; i < s.length(); i++) {
            char c = s.charAt(i);
            if (seen.contains(c)) {
                break;
            }
            seen.add(c);
            substring.append(c);
        }
        return substring.toString();
    }
}
