import java.util.HashMap;
import java.util.Map;
import java.util.stream.Collectors;

public class Employee {
int empId;
int empAge;
Double empSalary;
public Employee(int empId, int empAge, Double empSalary) {
	super();
	this.empId = empId;
	this.empAge = empAge;
	this.empSalary = empSalary;
}
public int getEmpId() {
	return empId;
}
public void setEmpId(int empId) {
	this.empId = empId;
}
public int getEmpAge() {
	return empAge;
}
public void setEmpAge(int empAge) {
	this.empAge = empAge;
}
public Double getEmpSalary() {
	return empSalary;
}
public void setEmpSalary(Double empSalary) {
	this.empSalary = empSalary;
}


}

class Ex{
	public static void main(String[] args) {
		Employee e1= new Employee(1, 26, 50000.0);
		Employee e2= new Employee(2, 24, 40000.0);
		Employee e3= new Employee(3, 25, 25000.0);
		Employee e4= new Employee(4, 30, 55000.0);
		Employee e5= new Employee(5, 35, 60000.0);
		Map<String, Employee> map= new HashMap<>();
		map.put("one",e1 );
		map.put("two",e2 );
		map.put("three",e3 );
		map.put("four",e4 );
		map.put("five",e5 );
		//After adding Emp Data Increase Employee Salary by 10% for those employees whose age >25
		
		map.entrySet().stream().filter(e->e.getValue().getEmpAge()>25)
		.peek(e->e.getValue().setEmpSalary(e.getValue().getEmpSalary()*(0.10)))
		.map(Map.Entry::getValue).collect(Collectors.toList()).forEach(System.out::println);
	}
}


