import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class Product {
	int id;
	double price;
	

	public int getId() {
		return id;
	}


	public void setId(int id) {
		this.id = id;
	}


	public double getPrice() {
		return price;
	}


	public void setPrice(double price) {
		this.price = price;
	}


	public Product(int id, double price) {
		super();
		this.id = id;
		this.price = price;
	}


	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
	
		
		/*Given a list of objects, I need to find the sum based on a condition:
			If the price > 30, multiply by 2, Else, add the same price
			Code Input:
			var inputList = [{id: 1, price: 10}, {id: 2, price: 35}, {id: 3, price: 60}];*/
			
			
		List<Product> list= Arrays.asList(new Product(1, 10.0),new Product(2, 35.0),new Product(3, 60.0));
		
		list.stream().filter(product->product.getPrice()>30.0).peek(product->product.setPrice(product.getPrice()*2))
		.collect(Collectors.toList()).forEach(System.out::println);
			
	}

}
